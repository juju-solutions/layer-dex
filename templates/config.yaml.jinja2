
# This file is under control by the dex juju charm. Manual edits will not
# be persisted! Edit at your own risk.

# The base path of dex and the external name of the OpenID Connect service.
# This is the canonical URL that all clients MUST use to refer to dex. If a
# path is provided, dex's HTTP service will listen at a non-root URL.
issuer: https://{{ issuer }}:{{ auth_port }}/dex
# The storage configuration determines where dex stores its state. Supported
# options include SQL flavors and Kubernetes third party resources.
#
# See the storage document at Documentation/storage.md for further information.
storage:
  type: sqlite3
  config:
    file: /var/snap/{{ dex_snap }}/common/dex.db
# Configuration for the HTTP endpoints.
web:
  https: 0.0.0.0:{{ auth_port }}
  # Uncomment for HTTPS options.
  # http: 127.0.0.1:5554
  tlsCert: {{ server_certificate_path }}
  tlsKey: {{ server_key_path }}
frontend:
  dir: /var/snap/{{ dex_snap }}/current/web

{% if expire_signing_keys and expire_id_tokens %}
# Uncomment this block to enable configuration for the expiration time durations.
expiry:
   signingKeys: "{{ expire_signing_keys }}h"
   idTokens: "{{ expire_id_tokens }}h"
{% endif %}
{% if debug %}
# Options for controlling the logger.
logger:
   level: "debug"
   format: "text" # can also be "json"
{% endif %}
# Instead of reading from an external storage, use this list of clients.
# If this option isn't chosen clients may be added through the gRPC API.
staticClients:
- id: auth-portal
  redirectURIs:
  - 'http://{{ issuer }}:{{ portal_port }}/callback'
  name: 'Auth Portal'
  secret: {{ portal_token }}

connectors:
{% if demo_mode -%}
- type: mockCallback
  id: mock
  name: Example
{% endif %}
{% if github_client and github_secret -%}
- type: github
  id: github
  name: GitHub
  config:
    # Credentials can be string literals or pulled from the environment.
    clientID: {{ github_client }}
    clientSecret: {{ github_secret }}
    redirectURI: https://{{ issuer }}:{{ auth_port }}/dex/callback
    {% if github_org %}
    # NOTE: This is an EXPERIMENTAL config option and will likely change.
    org: {{ github_org }}
    {% endif %}
{% endif %}
{% if google_client and google_secret -%}
 - type: oidc
   id: google
   name: Google
   config:
     issuer: https://accounts.google.com
#     # Connector config values starting with a "$" will read from the environment.
     clientID: {{ google_client }}
     clientSecret: {{ google_secret }}
     redirectURI: https://{{ issuer }}:{{ auth_port }}/dex/callback
{% endif %}
{% if demo_mode -%}
# Let dex keep a list of passwords which can be used to login to dex.
enablePasswordDB: true
# A static list of passwords to login the end user. By identifying here, dex
# won't look in its underlying storage for passwords.
#
# If this option isn't chosen users may be added through the gRPC API.
staticPasswords:
- email: "admin@example.com"
  # bcrypt hash of the string "password"
  hash: "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W"
  username: "admin"
  userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"
{% endif %}
